[{"/home/lalo/Desktop/devs/Projects/MERN-ninja-blog/frontend/src/index.js":"1","/home/lalo/Desktop/devs/Projects/MERN-ninja-blog/frontend/src/App.js":"2","/home/lalo/Desktop/devs/Projects/MERN-ninja-blog/frontend/src/components/Alerts.js":"3","/home/lalo/Desktop/devs/Projects/MERN-ninja-blog/frontend/src/components/NavBar.js":"4","/home/lalo/Desktop/devs/Projects/MERN-ninja-blog/frontend/src/pages/HomePage.js":"5","/home/lalo/Desktop/devs/Projects/MERN-ninja-blog/frontend/src/pages/BlogDetailPage.js":"6","/home/lalo/Desktop/devs/Projects/MERN-ninja-blog/frontend/src/pages/NewBlogPage.js":"7","/home/lalo/Desktop/devs/Projects/MERN-ninja-blog/frontend/src/pages/LoginPage.js":"8","/home/lalo/Desktop/devs/Projects/MERN-ninja-blog/frontend/src/pages/RegisterPage.js":"9","/home/lalo/Desktop/devs/Projects/MERN-ninja-blog/frontend/src/context/alert/AlertState.js":"10","/home/lalo/Desktop/devs/Projects/MERN-ninja-blog/frontend/src/context/auth/AuthState.js":"11","/home/lalo/Desktop/devs/Projects/MERN-ninja-blog/frontend/src/components/BlogPreview.js":"12","/home/lalo/Desktop/devs/Projects/MERN-ninja-blog/frontend/src/context/alert/alertContext.js":"13","/home/lalo/Desktop/devs/Projects/MERN-ninja-blog/frontend/src/context/auth/authContext.js":"14","/home/lalo/Desktop/devs/Projects/MERN-ninja-blog/frontend/src/context/alert/alertReducer.js":"15","/home/lalo/Desktop/devs/Projects/MERN-ninja-blog/frontend/src/context/types.js":"16","/home/lalo/Desktop/devs/Projects/MERN-ninja-blog/frontend/src/context/auth/authReducer.js":"17","/home/lalo/Desktop/devs/Projects/MERN-ninja-blog/frontend/src/utils/setAuthToken.js":"18"},{"size":427,"mtime":1612164920482,"results":"19","hashOfConfig":"20"},{"size":1144,"mtime":1612164920482,"results":"21","hashOfConfig":"20"},{"size":431,"mtime":1612164920482,"results":"22","hashOfConfig":"20"},{"size":406,"mtime":1612164920482,"results":"23","hashOfConfig":"20"},{"size":6178,"mtime":1612164920482,"results":"24","hashOfConfig":"20"},{"size":466,"mtime":1612164920482,"results":"25","hashOfConfig":"20"},{"size":574,"mtime":1612164920482,"results":"26","hashOfConfig":"20"},{"size":1388,"mtime":1612164920482,"results":"27","hashOfConfig":"20"},{"size":2650,"mtime":1612164920482,"results":"28","hashOfConfig":"20"},{"size":783,"mtime":1612164920482,"results":"29","hashOfConfig":"20"},{"size":2221,"mtime":1612164920482,"results":"30","hashOfConfig":"20"},{"size":266,"mtime":1612164920482,"results":"31","hashOfConfig":"20"},{"size":105,"mtime":1612164920482,"results":"32","hashOfConfig":"20"},{"size":103,"mtime":1612164920482,"results":"33","hashOfConfig":"20"},{"size":302,"mtime":1612164920482,"results":"34","hashOfConfig":"20"},{"size":497,"mtime":1612164920482,"results":"35","hashOfConfig":"20"},{"size":785,"mtime":1612164920482,"results":"36","hashOfConfig":"20"},{"size":229,"mtime":1612164920482,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1kdoqzp",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"40"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"40"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/lalo/Desktop/devs/Projects/MERN-ninja-blog/frontend/src/index.js",[],["79","80"],"/home/lalo/Desktop/devs/Projects/MERN-ninja-blog/frontend/src/App.js",[],"/home/lalo/Desktop/devs/Projects/MERN-ninja-blog/frontend/src/components/Alerts.js",[],"/home/lalo/Desktop/devs/Projects/MERN-ninja-blog/frontend/src/components/NavBar.js",[],"/home/lalo/Desktop/devs/Projects/MERN-ninja-blog/frontend/src/pages/HomePage.js",[],"/home/lalo/Desktop/devs/Projects/MERN-ninja-blog/frontend/src/pages/BlogDetailPage.js",[],"/home/lalo/Desktop/devs/Projects/MERN-ninja-blog/frontend/src/pages/NewBlogPage.js",[],"/home/lalo/Desktop/devs/Projects/MERN-ninja-blog/frontend/src/pages/LoginPage.js",[],"/home/lalo/Desktop/devs/Projects/MERN-ninja-blog/frontend/src/pages/RegisterPage.js",["81","82"],"import { set } from 'mongoose'\nimport React, { useState, useContext, useEffect } from 'react'\nimport AlertContext from '../context/alert/alertContext'\nimport AuthContext from '../context/auth/authContext'\n\nconst RegisterPage = () => {\n  const alertContext = useContext(AlertContext)\n  const { setAlert } = alertContext\n\n  const authContext = useContext(AuthContext)\n  const {register, error, clearErrors} = authContext\n\n  useEffect(()=> {\n    // if(error === 'User already exists'){\n    if(error){\n      setAlert(error, 'danger')\n      clearErrors()\n    }\n  }, [error, setAlert])\n\n  const [user, setUser] = useState({\n    name: '',\n    email: '',\n    password: '',\n    confirmPassword: '',\n  })\n\n  const { name, email, password, confirmPassword } = user\n\n  const onChange = (e) => {\n    setUser({\n      ...user,\n      [e.target.name]: e.target.value,\n    })\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n\n    if (name === '' || email === '' || password === '') {\n      setAlert('All fields pls ;)', 'danger')\n    } else if (password !== confirmPassword) {\n      setAlert('Passwords do not match', 'danger')\n    } else if(password.length < 8){\n      setAlert('To short your pass...', 'danger')\n\n    }else {\n      register({name, email, password})\n\n      // console.log(password.length)\n      // console.log(user)\n      // console.log('login success!')\n    }\n  }\n\n  return (\n    <>\n      <h2>Register page</h2>\n      <form className='create' onSubmit={handleSubmit}>\n        <label htmlFor='name' className='create label'>\n          Name:\n        </label>\n        <input\n          name='name'\n          type='text'\n          value={name}\n          onChange={onChange}\n          // required\n        />\n        <label htmlFor='email' className='create label'>\n          Email:\n        </label>\n        <input\n          name='email'\n          type='email'\n          value={email}\n          onChange={onChange}\n          // required\n        />\n        <label htmlFor='password' className='create label'>\n          Password:\n        </label>\n        <input\n          name='password'\n          type='password'\n          value={password}\n          onChange={onChange}\n          // required\n          // minLength='8'\n        />\n        <label htmlFor='confirm-password' className='create label'>\n          Confirm password:\n        </label>\n        <input\n          name='confirmPassword'\n          type='password'\n          value={confirmPassword}\n          onChange={onChange}\n          // required\n          // minLength='8'\n\n        />\n        <button type='submit'>Register</button>\n      </form>\n    </>\n  )\n}\n\nexport default RegisterPage\n","/home/lalo/Desktop/devs/Projects/MERN-ninja-blog/frontend/src/context/alert/AlertState.js",[],"/home/lalo/Desktop/devs/Projects/MERN-ninja-blog/frontend/src/context/auth/AuthState.js",["83"],"import { useReducer } from 'react'\nimport axios from 'axios'\nimport authContext from './authContext'\nimport authReducer from './authReducer'\nimport setAuthToken from '../../utils/setAuthToken'\nimport {\n  LOGIN_REQUEST,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  REGISTER_REQUEST,\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  CLEAR_ERRORS\n} from '../types'\n\nconst AuthState = ({ children }) => {\n  const initialState = {\n    token: localStorage.getItem('token'),\n    isAuthenticated: null,\n    user: null,\n    loading: true,\n    error: null,\n  }\n\n  const [state, dispatch] = useReducer(authReducer, initialState)\n\n  const loadUser = async () => {\n    if (localStorage.token) {\n      setAuthToken(localStorage.token)\n    }\n\n    try {\n      const res = await axios.get()\n    } catch (error) {}\n  }\n\n  const login = async (formData) => {\n    try {\n      dispatch({ type: LOGIN_REQUEST })\n\n      const config = {\n        headers: { 'Content-Type': 'application/json' },\n      }\n\n      const res = await axios.post(`/api/users/login`, formData, config)\n\n      dispatch({ type: LOGIN_SUCCESS, payload: res.data })\n\n      loadUser()\n    } catch (err) {\n      dispatch({\n        type: LOGIN_FAIL,\n        payload: err.response.data.message,\n      })\n    }\n  }\n\n  const register = async (formData) => {\n    try {\n      dispatch({ type: REGISTER_REQUEST })\n\n      const config = {\n        headers: { 'Content-Type': 'application/json' },\n      }\n\n      const res = await axios.post(`/api/users/register`, formData, config)\n\n      dispatch({ type: REGISTER_SUCCESS, payload: res.data })\n    } catch (err) {\n      dispatch({ type: REGISTER_FAIL, payload: err.response.data.message })\n      console.log(err.response.data.message)\n    }\n  }\n\n  const logout = () => {\n    console.log('logout')\n  }\n\n  const clearErrors = () => dispatch({type: CLEAR_ERRORS})\n\n  return (\n    <authContext.Provider\n      value={{\n        token: state.token,\n        isAuthenticated: state.isAuthenticated,\n        user: state.user,\n        loading: state.loading,\n        error: state.error,\n        register,\n        loadUser,\n        login,\n        logout,\n        clearErrors,\n      }}\n    >\n      {children}\n    </authContext.Provider>\n  )\n}\n\nexport default AuthState\n","/home/lalo/Desktop/devs/Projects/MERN-ninja-blog/frontend/src/components/BlogPreview.js",[],"/home/lalo/Desktop/devs/Projects/MERN-ninja-blog/frontend/src/context/alert/alertContext.js",[],"/home/lalo/Desktop/devs/Projects/MERN-ninja-blog/frontend/src/context/auth/authContext.js",[],"/home/lalo/Desktop/devs/Projects/MERN-ninja-blog/frontend/src/context/alert/alertReducer.js",["84"],"import { SET_ALERT, REMOVE_ALERT } from '../types'\n\nexport default (state, action) => {\n  switch (action.type) {\n    case SET_ALERT:\n      return [...state, action.payload]\n\n    case REMOVE_ALERT:\n      return state.filter((alert) => alert.id !== action.payload)\n\n    default:\n      return state\n  }\n}\n","/home/lalo/Desktop/devs/Projects/MERN-ninja-blog/frontend/src/context/types.js",[],"/home/lalo/Desktop/devs/Projects/MERN-ninja-blog/frontend/src/context/auth/authReducer.js",["85"],"import { REGISTER_REQUEST, REGISTER_SUCCESS, REGISTER_FAIL, CLEAR_ERRORS } from '../types'\n\nexport default (state, action) => {\n  switch (action.type) {\n    case REGISTER_REQUEST:\n      return {\n        loading: true,\n      }\n    case REGISTER_SUCCESS:\n      localStorage.setItem('token', action.payload.token)\n      return {\n        ...state,\n        ...action.payload,\n        isAuthenticated: true,\n        loading: false\n      }\n    case REGISTER_FAIL:\n      localStorage.removeItem('token')\n      return{\n        ...state,\n        token: null,\n        isAuthenticated: false,\n        loading: false,\n        user: null,\n        error: action.payload\n      }\n    case CLEAR_ERRORS:\n      return {\n        ...state,\n        error: null\n      }\n    default:\n      return state\n  }\n}\n","/home/lalo/Desktop/devs/Projects/MERN-ninja-blog/frontend/src/utils/setAuthToken.js",[],{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","severity":1,"message":"91","line":1,"column":10,"nodeType":"92","messageId":"93","endLine":1,"endColumn":13},{"ruleId":"94","severity":1,"message":"95","line":19,"column":6,"nodeType":"96","endLine":19,"endColumn":23,"suggestions":"97"},{"ruleId":"90","severity":1,"message":"98","line":33,"column":13,"nodeType":"92","messageId":"93","endLine":33,"endColumn":16},{"ruleId":"99","severity":1,"message":"100","line":3,"column":1,"nodeType":"101","endLine":14,"endColumn":2},{"ruleId":"99","severity":1,"message":"100","line":3,"column":1,"nodeType":"101","endLine":35,"endColumn":2},"no-native-reassign",["102"],"no-negated-in-lhs",["103"],"no-unused-vars","'set' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'clearErrors'. Either include it or remove the dependency array.","ArrayExpression",["104"],"'res' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"105","fix":"106"},"Update the dependencies array to be: [clearErrors, error, setAlert]",{"range":"107","text":"108"},[561,578],"[clearErrors, error, setAlert]"]